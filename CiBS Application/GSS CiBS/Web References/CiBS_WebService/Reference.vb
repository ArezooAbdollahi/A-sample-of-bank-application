'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace CiBS_WebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CiBS_WebServiceSoap", [Namespace]:="http://evolis.me/")>  _
    Partial Public Class CiBS_WebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetRepositoryRequestsSelectedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRepositoryRequestsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRepositoryAcceptingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRepositoryReceivingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteReposotoryRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteAdminMessageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangeAdminMessageStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertUnusableCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindPosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindBranchUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCustomerInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCardData22OperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCardDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateActiveDirectoryLoginWebOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserChangePasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResetPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertPosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchPosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ShebaGeneratorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCounterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardDataGiftOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStatusLastCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPosDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardDataIranCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReCardDataIranCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllErrorMsgOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchErrorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchErrorMsgOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPrintedCardFlagOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFailedLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetIsLogedInOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetConsumableCardsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckExistBlueCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckOldCardNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExistCustomerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStackStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStackStatusFromBranchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetConsumablesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPrintTempalteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCardRemainOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchStatckStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCardPrintTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCustomerDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCardPrintTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportDataGiftCardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserNameFrWinUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImportedDataStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRemainCardDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportDataCountsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportDataCountsBranchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetgetUnusableCardsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdminMessagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLogDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchRepositoryDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchRepositoryStatusByDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchRepositoryConflictDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLastPrintedCardDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertConsumableRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertAdminMessageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CIBS.My.MySettings.Default.TAT_BANK_CiBS_CiBS_WebService_CiBS_WebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetRepositoryRequestsSelectedCompleted As GetRepositoryRequestsSelectedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRepositoryRequestsCompleted As GetRepositoryRequestsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRepositoryAcceptingCompleted As UpdateRepositoryAcceptingCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRepositoryReceivingCompleted As UpdateRepositoryReceivingCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteReposotoryRequestCompleted As DeleteReposotoryRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteAdminMessageCompleted As DeleteAdminMessageCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangeAdminMessageStatusCompleted As ChangeAdminMessageStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertUnusableCardCompleted As InsertUnusableCardCompletedEventHandler
        
        '''<remarks/>
        Public Event FindPosCompleted As FindPosCompletedEventHandler
        
        '''<remarks/>
        Public Event FindUsersCompleted As FindUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event FindBranchUsersCompleted As FindBranchUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCustomerInfoCompleted As GetCustomerInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCardData22Completed As InsertCardData22CompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCardDataCompleted As InsertCardDataCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckUserCompleted As CheckUserCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateActiveDirectoryLoginWebCompleted As ValidateActiveDirectoryLoginWebCompletedEventHandler
        
        '''<remarks/>
        Public Event UserChangePasswordCompleted As UserChangePasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event ResetPasswordCompleted As ResetPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserCompleted As DeleteUserCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePosCompleted As UpdatePosCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserCompleted As UpdateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertPosCompleted As InsertPosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertUserCompleted As InsertUserCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchPosCompleted As SearchPosCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchUserCompleted As SearchUserCompletedEventHandler
        
        '''<remarks/>
        Public Event ShebaGeneratorCompleted As ShebaGeneratorCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCounterCompleted As GetCounterCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardDataGiftCompleted As GetCardDataGiftCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardDataCompleted As GetCardDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStatusLastCardCompleted As GetStatusLastCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPosDataCompleted As GetPosDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardDataIranCardCompleted As GetCardDataIranCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReCardDataIranCardCompleted As GetReCardDataIranCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllErrorMsgCompleted As GetAllErrorMsgCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchErrorCompleted As SearchErrorCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchErrorMsgCompleted As SearchErrorMsgCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPrintedCardFlagCompleted As SetPrintedCardFlagCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertLogCompleted As InsertLogCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFailedLoginCompleted As UpdateFailedLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event SetIsLogedInCompleted As SetIsLogedInCompletedEventHandler
        
        '''<remarks/>
        Public Event GetConsumableCardsCompleted As GetConsumableCardsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardTypesCompleted As GetCardTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckExistBlueCardCompleted As CheckExistBlueCardCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckOldCardNoCompleted As CheckOldCardNoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExistCustomerCompleted As GetExistCustomerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStackStatusCompleted As GetStackStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStackStatusFromBranchCompleted As GetStackStatusFromBranchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetConsumablesCompleted As GetConsumablesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPrintTempalteCompleted As GetPrintTempalteCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCardRemainCompleted As GetCardRemainCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchStatckStatusCompleted As GetBranchStatckStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCardPrintTemplateCompleted As UpdateCardPrintTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCustomerDataCompleted As InsertCustomerDataCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCardPrintTemplateCompleted As InsertCardPrintTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportDataGiftCardCompleted As GetReportDataGiftCardCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportDataCompleted As GetReportDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserNameFrWinUserCompleted As GetUserNameFrWinUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImportedDataStatusCompleted As GetImportedDataStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRemainCardDataCompleted As GetRemainCardDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportDataCountsCompleted As GetReportDataCountsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportDataCountsBranchCompleted As GetReportDataCountsBranchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetgetUnusableCardsCompleted As GetgetUnusableCardsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdminMessagesCompleted As GetAdminMessagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLogDataCompleted As GetLogDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchRepositoryDataCompleted As GetBranchRepositoryDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchRepositoryStatusByDateCompleted As GetBranchRepositoryStatusByDateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchRepositoryConflictDataCompleted As GetBranchRepositoryConflictDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLastPrintedCardDataCompleted As GetLastPrintedCardDataCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertConsumableRequestCompleted As InsertConsumableRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertAdminMessageCompleted As InsertAdminMessageCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetRepositoryRequestsSelected", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRepositoryRequestsSelected(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetRepositoryRequestsSelected", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRepositoryRequestsSelectedAsync(ByVal param As String)
            Me.GetRepositoryRequestsSelectedAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRepositoryRequestsSelectedAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetRepositoryRequestsSelectedOperationCompleted Is Nothing) Then
                Me.GetRepositoryRequestsSelectedOperationCompleted = AddressOf Me.OnGetRepositoryRequestsSelectedOperationCompleted
            End If
            Me.InvokeAsync("GetRepositoryRequestsSelected", New Object() {param}, Me.GetRepositoryRequestsSelectedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRepositoryRequestsSelectedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRepositoryRequestsSelectedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRepositoryRequestsSelectedCompleted(Me, New GetRepositoryRequestsSelectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetRepositoryRequests", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRepositoryRequests(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetRepositoryRequests", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRepositoryRequestsAsync(ByVal param As String)
            Me.GetRepositoryRequestsAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRepositoryRequestsAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetRepositoryRequestsOperationCompleted Is Nothing) Then
                Me.GetRepositoryRequestsOperationCompleted = AddressOf Me.OnGetRepositoryRequestsOperationCompleted
            End If
            Me.InvokeAsync("GetRepositoryRequests", New Object() {param}, Me.GetRepositoryRequestsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRepositoryRequestsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRepositoryRequestsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRepositoryRequestsCompleted(Me, New GetRepositoryRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/UpdateRepositoryAccepting", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRepositoryAccepting(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("UpdateRepositoryAccepting", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRepositoryAcceptingAsync(ByVal param As String)
            Me.UpdateRepositoryAcceptingAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRepositoryAcceptingAsync(ByVal param As String, ByVal userState As Object)
            If (Me.UpdateRepositoryAcceptingOperationCompleted Is Nothing) Then
                Me.UpdateRepositoryAcceptingOperationCompleted = AddressOf Me.OnUpdateRepositoryAcceptingOperationCompleted
            End If
            Me.InvokeAsync("UpdateRepositoryAccepting", New Object() {param}, Me.UpdateRepositoryAcceptingOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRepositoryAcceptingOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRepositoryAcceptingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRepositoryAcceptingCompleted(Me, New UpdateRepositoryAcceptingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/UpdateRepositoryReceiving", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRepositoryReceiving(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("UpdateRepositoryReceiving", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRepositoryReceivingAsync(ByVal param As String)
            Me.UpdateRepositoryReceivingAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRepositoryReceivingAsync(ByVal param As String, ByVal userState As Object)
            If (Me.UpdateRepositoryReceivingOperationCompleted Is Nothing) Then
                Me.UpdateRepositoryReceivingOperationCompleted = AddressOf Me.OnUpdateRepositoryReceivingOperationCompleted
            End If
            Me.InvokeAsync("UpdateRepositoryReceiving", New Object() {param}, Me.UpdateRepositoryReceivingOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRepositoryReceivingOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRepositoryReceivingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRepositoryReceivingCompleted(Me, New UpdateRepositoryReceivingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/DeleteReposotoryRequest", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteReposotoryRequest(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("DeleteReposotoryRequest", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteReposotoryRequestAsync(ByVal param As String)
            Me.DeleteReposotoryRequestAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteReposotoryRequestAsync(ByVal param As String, ByVal userState As Object)
            If (Me.DeleteReposotoryRequestOperationCompleted Is Nothing) Then
                Me.DeleteReposotoryRequestOperationCompleted = AddressOf Me.OnDeleteReposotoryRequestOperationCompleted
            End If
            Me.InvokeAsync("DeleteReposotoryRequest", New Object() {param}, Me.DeleteReposotoryRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteReposotoryRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteReposotoryRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteReposotoryRequestCompleted(Me, New DeleteReposotoryRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/DeleteAdminMessage", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteAdminMessage(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("DeleteAdminMessage", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteAdminMessageAsync(ByVal param As String)
            Me.DeleteAdminMessageAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAdminMessageAsync(ByVal param As String, ByVal userState As Object)
            If (Me.DeleteAdminMessageOperationCompleted Is Nothing) Then
                Me.DeleteAdminMessageOperationCompleted = AddressOf Me.OnDeleteAdminMessageOperationCompleted
            End If
            Me.InvokeAsync("DeleteAdminMessage", New Object() {param}, Me.DeleteAdminMessageOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteAdminMessageOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteAdminMessageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteAdminMessageCompleted(Me, New DeleteAdminMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/ChangeAdminMessageStatus", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangeAdminMessageStatus(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("ChangeAdminMessageStatus", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangeAdminMessageStatusAsync(ByVal param As String)
            Me.ChangeAdminMessageStatusAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeAdminMessageStatusAsync(ByVal param As String, ByVal userState As Object)
            If (Me.ChangeAdminMessageStatusOperationCompleted Is Nothing) Then
                Me.ChangeAdminMessageStatusOperationCompleted = AddressOf Me.OnChangeAdminMessageStatusOperationCompleted
            End If
            Me.InvokeAsync("ChangeAdminMessageStatus", New Object() {param}, Me.ChangeAdminMessageStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangeAdminMessageStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangeAdminMessageStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangeAdminMessageStatusCompleted(Me, New ChangeAdminMessageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertUnusableCard", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertUnusableCard(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertUnusableCard", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertUnusableCardAsync(ByVal param As String)
            Me.InsertUnusableCardAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertUnusableCardAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertUnusableCardOperationCompleted Is Nothing) Then
                Me.InsertUnusableCardOperationCompleted = AddressOf Me.OnInsertUnusableCardOperationCompleted
            End If
            Me.InvokeAsync("InsertUnusableCard", New Object() {param}, Me.InsertUnusableCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertUnusableCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertUnusableCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertUnusableCardCompleted(Me, New InsertUnusableCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/FindPos", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindPos(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("FindPos", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindPosAsync(ByVal param As String)
            Me.FindPosAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindPosAsync(ByVal param As String, ByVal userState As Object)
            If (Me.FindPosOperationCompleted Is Nothing) Then
                Me.FindPosOperationCompleted = AddressOf Me.OnFindPosOperationCompleted
            End If
            Me.InvokeAsync("FindPos", New Object() {param}, Me.FindPosOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindPosOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindPosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindPosCompleted(Me, New FindPosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/FindUsers", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindUsers(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("FindUsers", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindUsersAsync(ByVal param As String)
            Me.FindUsersAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindUsersAsync(ByVal param As String, ByVal userState As Object)
            If (Me.FindUsersOperationCompleted Is Nothing) Then
                Me.FindUsersOperationCompleted = AddressOf Me.OnFindUsersOperationCompleted
            End If
            Me.InvokeAsync("FindUsers", New Object() {param}, Me.FindUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindUsersCompleted(Me, New FindUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/FindBranchUsers", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindBranchUsers(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("FindBranchUsers", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindBranchUsersAsync(ByVal param As String)
            Me.FindBranchUsersAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindBranchUsersAsync(ByVal param As String, ByVal userState As Object)
            If (Me.FindBranchUsersOperationCompleted Is Nothing) Then
                Me.FindBranchUsersOperationCompleted = AddressOf Me.OnFindBranchUsersOperationCompleted
            End If
            Me.InvokeAsync("FindBranchUsers", New Object() {param}, Me.FindBranchUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindBranchUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindBranchUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindBranchUsersCompleted(Me, New FindBranchUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetCustomerInfo", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCustomerInfo(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetCustomerInfo", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCustomerInfoAsync(ByVal param As String)
            Me.GetCustomerInfoAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCustomerInfoAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetCustomerInfoOperationCompleted Is Nothing) Then
                Me.GetCustomerInfoOperationCompleted = AddressOf Me.OnGetCustomerInfoOperationCompleted
            End If
            Me.InvokeAsync("GetCustomerInfo", New Object() {param}, Me.GetCustomerInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCustomerInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCustomerInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCustomerInfoCompleted(Me, New GetCustomerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertCardData22", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCardData22(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertCardData22", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCardData22Async(ByVal param As String)
            Me.InsertCardData22Async(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCardData22Async(ByVal param As String, ByVal userState As Object)
            If (Me.InsertCardData22OperationCompleted Is Nothing) Then
                Me.InsertCardData22OperationCompleted = AddressOf Me.OnInsertCardData22OperationCompleted
            End If
            Me.InvokeAsync("InsertCardData22", New Object() {param}, Me.InsertCardData22OperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCardData22OperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCardData22CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCardData22Completed(Me, New InsertCardData22CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertCardData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCardData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertCardData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCardDataAsync(ByVal param As String)
            Me.InsertCardDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCardDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertCardDataOperationCompleted Is Nothing) Then
                Me.InsertCardDataOperationCompleted = AddressOf Me.OnInsertCardDataOperationCompleted
            End If
            Me.InvokeAsync("InsertCardData", New Object() {param}, Me.InsertCardDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCardDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCardDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCardDataCompleted(Me, New InsertCardDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/CheckUser", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckUser(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("CheckUser", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckUserAsync(ByVal param As String)
            Me.CheckUserAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckUserAsync(ByVal param As String, ByVal userState As Object)
            If (Me.CheckUserOperationCompleted Is Nothing) Then
                Me.CheckUserOperationCompleted = AddressOf Me.OnCheckUserOperationCompleted
            End If
            Me.InvokeAsync("CheckUser", New Object() {param}, Me.CheckUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckUserCompleted(Me, New CheckUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/ValidateActiveDirectoryLoginWeb", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateActiveDirectoryLoginWeb(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("ValidateActiveDirectoryLoginWeb", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateActiveDirectoryLoginWebAsync(ByVal param As String)
            Me.ValidateActiveDirectoryLoginWebAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateActiveDirectoryLoginWebAsync(ByVal param As String, ByVal userState As Object)
            If (Me.ValidateActiveDirectoryLoginWebOperationCompleted Is Nothing) Then
                Me.ValidateActiveDirectoryLoginWebOperationCompleted = AddressOf Me.OnValidateActiveDirectoryLoginWebOperationCompleted
            End If
            Me.InvokeAsync("ValidateActiveDirectoryLoginWeb", New Object() {param}, Me.ValidateActiveDirectoryLoginWebOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateActiveDirectoryLoginWebOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateActiveDirectoryLoginWebCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateActiveDirectoryLoginWebCompleted(Me, New ValidateActiveDirectoryLoginWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/UserChangePassword", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UserChangePassword(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("UserChangePassword", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserChangePasswordAsync(ByVal param As String)
            Me.UserChangePasswordAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserChangePasswordAsync(ByVal param As String, ByVal userState As Object)
            If (Me.UserChangePasswordOperationCompleted Is Nothing) Then
                Me.UserChangePasswordOperationCompleted = AddressOf Me.OnUserChangePasswordOperationCompleted
            End If
            Me.InvokeAsync("UserChangePassword", New Object() {param}, Me.UserChangePasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserChangePasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserChangePasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserChangePasswordCompleted(Me, New UserChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/ResetPassword", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ResetPassword(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("ResetPassword", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ResetPasswordAsync(ByVal param As String)
            Me.ResetPasswordAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetPasswordAsync(ByVal param As String, ByVal userState As Object)
            If (Me.ResetPasswordOperationCompleted Is Nothing) Then
                Me.ResetPasswordOperationCompleted = AddressOf Me.OnResetPasswordOperationCompleted
            End If
            Me.InvokeAsync("ResetPassword", New Object() {param}, Me.ResetPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnResetPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResetPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResetPasswordCompleted(Me, New ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/DeleteUser", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteUser(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("DeleteUser", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAsync(ByVal param As String)
            Me.DeleteUserAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAsync(ByVal param As String, ByVal userState As Object)
            If (Me.DeleteUserOperationCompleted Is Nothing) Then
                Me.DeleteUserOperationCompleted = AddressOf Me.OnDeleteUserOperationCompleted
            End If
            Me.InvokeAsync("DeleteUser", New Object() {param}, Me.DeleteUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserCompleted(Me, New DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/UpdatePos", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdatePos(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("UpdatePos", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdatePosAsync(ByVal param As String)
            Me.UpdatePosAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePosAsync(ByVal param As String, ByVal userState As Object)
            If (Me.UpdatePosOperationCompleted Is Nothing) Then
                Me.UpdatePosOperationCompleted = AddressOf Me.OnUpdatePosOperationCompleted
            End If
            Me.InvokeAsync("UpdatePos", New Object() {param}, Me.UpdatePosOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePosOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePosCompleted(Me, New UpdatePosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/UpdateUser", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateUser(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("UpdateUser", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAsync(ByVal param As String)
            Me.UpdateUserAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAsync(ByVal param As String, ByVal userState As Object)
            If (Me.UpdateUserOperationCompleted Is Nothing) Then
                Me.UpdateUserOperationCompleted = AddressOf Me.OnUpdateUserOperationCompleted
            End If
            Me.InvokeAsync("UpdateUser", New Object() {param}, Me.UpdateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserCompleted(Me, New UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertPos", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertPos(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertPos", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertPosAsync(ByVal param As String)
            Me.InsertPosAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertPosAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertPosOperationCompleted Is Nothing) Then
                Me.InsertPosOperationCompleted = AddressOf Me.OnInsertPosOperationCompleted
            End If
            Me.InvokeAsync("InsertPos", New Object() {param}, Me.InsertPosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertPosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertPosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertPosCompleted(Me, New InsertPosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertUser", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertUser(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertUser", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertUserAsync(ByVal param As String)
            Me.InsertUserAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertUserAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertUserOperationCompleted Is Nothing) Then
                Me.InsertUserOperationCompleted = AddressOf Me.OnInsertUserOperationCompleted
            End If
            Me.InvokeAsync("InsertUser", New Object() {param}, Me.InsertUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertUserCompleted(Me, New InsertUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/SearchPos", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchPos(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("SearchPos", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchPosAsync(ByVal param As String)
            Me.SearchPosAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchPosAsync(ByVal param As String, ByVal userState As Object)
            If (Me.SearchPosOperationCompleted Is Nothing) Then
                Me.SearchPosOperationCompleted = AddressOf Me.OnSearchPosOperationCompleted
            End If
            Me.InvokeAsync("SearchPos", New Object() {param}, Me.SearchPosOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchPosOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchPosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchPosCompleted(Me, New SearchPosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/SearchUser", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchUser(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("SearchUser", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchUserAsync(ByVal param As String)
            Me.SearchUserAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchUserAsync(ByVal param As String, ByVal userState As Object)
            If (Me.SearchUserOperationCompleted Is Nothing) Then
                Me.SearchUserOperationCompleted = AddressOf Me.OnSearchUserOperationCompleted
            End If
            Me.InvokeAsync("SearchUser", New Object() {param}, Me.SearchUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchUserCompleted(Me, New SearchUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/ShebaGenerator", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ShebaGenerator(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("ShebaGenerator", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ShebaGeneratorAsync(ByVal param As String)
            Me.ShebaGeneratorAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ShebaGeneratorAsync(ByVal param As String, ByVal userState As Object)
            If (Me.ShebaGeneratorOperationCompleted Is Nothing) Then
                Me.ShebaGeneratorOperationCompleted = AddressOf Me.OnShebaGeneratorOperationCompleted
            End If
            Me.InvokeAsync("ShebaGenerator", New Object() {param}, Me.ShebaGeneratorOperationCompleted, userState)
        End Sub
        
        Private Sub OnShebaGeneratorOperationCompleted(ByVal arg As Object)
            If (Not (Me.ShebaGeneratorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ShebaGeneratorCompleted(Me, New ShebaGeneratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetCounter", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCounter() As String
            Dim results() As Object = Me.Invoke("GetCounter", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCounterAsync()
            Me.GetCounterAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCounterAsync(ByVal userState As Object)
            If (Me.GetCounterOperationCompleted Is Nothing) Then
                Me.GetCounterOperationCompleted = AddressOf Me.OnGetCounterOperationCompleted
            End If
            Me.InvokeAsync("GetCounter", New Object(-1) {}, Me.GetCounterOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCounterOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCounterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCounterCompleted(Me, New GetCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetCardDataGift", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardDataGift(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetCardDataGift", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardDataGiftAsync(ByVal param As String)
            Me.GetCardDataGiftAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardDataGiftAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetCardDataGiftOperationCompleted Is Nothing) Then
                Me.GetCardDataGiftOperationCompleted = AddressOf Me.OnGetCardDataGiftOperationCompleted
            End If
            Me.InvokeAsync("GetCardDataGift", New Object() {param}, Me.GetCardDataGiftOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardDataGiftOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardDataGiftCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardDataGiftCompleted(Me, New GetCardDataGiftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetCardData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetCardData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardDataAsync(ByVal param As String)
            Me.GetCardDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetCardDataOperationCompleted Is Nothing) Then
                Me.GetCardDataOperationCompleted = AddressOf Me.OnGetCardDataOperationCompleted
            End If
            Me.InvokeAsync("GetCardData", New Object() {param}, Me.GetCardDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardDataCompleted(Me, New GetCardDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetStatusLastCard", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStatusLastCard(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetStatusLastCard", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStatusLastCardAsync(ByVal param As String)
            Me.GetStatusLastCardAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStatusLastCardAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetStatusLastCardOperationCompleted Is Nothing) Then
                Me.GetStatusLastCardOperationCompleted = AddressOf Me.OnGetStatusLastCardOperationCompleted
            End If
            Me.InvokeAsync("GetStatusLastCard", New Object() {param}, Me.GetStatusLastCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStatusLastCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStatusLastCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStatusLastCardCompleted(Me, New GetStatusLastCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetPosData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPosData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetPosData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPosDataAsync(ByVal param As String)
            Me.GetPosDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPosDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetPosDataOperationCompleted Is Nothing) Then
                Me.GetPosDataOperationCompleted = AddressOf Me.OnGetPosDataOperationCompleted
            End If
            Me.InvokeAsync("GetPosData", New Object() {param}, Me.GetPosDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPosDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPosDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPosDataCompleted(Me, New GetPosDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetCardDataIranCard", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardDataIranCard(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetCardDataIranCard", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardDataIranCardAsync(ByVal param As String)
            Me.GetCardDataIranCardAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardDataIranCardAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetCardDataIranCardOperationCompleted Is Nothing) Then
                Me.GetCardDataIranCardOperationCompleted = AddressOf Me.OnGetCardDataIranCardOperationCompleted
            End If
            Me.InvokeAsync("GetCardDataIranCard", New Object() {param}, Me.GetCardDataIranCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardDataIranCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardDataIranCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardDataIranCardCompleted(Me, New GetCardDataIranCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetReCardDataIranCard", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReCardDataIranCard(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetReCardDataIranCard", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReCardDataIranCardAsync(ByVal param As String)
            Me.GetReCardDataIranCardAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReCardDataIranCardAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetReCardDataIranCardOperationCompleted Is Nothing) Then
                Me.GetReCardDataIranCardOperationCompleted = AddressOf Me.OnGetReCardDataIranCardOperationCompleted
            End If
            Me.InvokeAsync("GetReCardDataIranCard", New Object() {param}, Me.GetReCardDataIranCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReCardDataIranCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReCardDataIranCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReCardDataIranCardCompleted(Me, New GetReCardDataIranCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetAllErrorMsg", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllErrorMsg() As String
            Dim results() As Object = Me.Invoke("GetAllErrorMsg", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllErrorMsgAsync()
            Me.GetAllErrorMsgAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllErrorMsgAsync(ByVal userState As Object)
            If (Me.GetAllErrorMsgOperationCompleted Is Nothing) Then
                Me.GetAllErrorMsgOperationCompleted = AddressOf Me.OnGetAllErrorMsgOperationCompleted
            End If
            Me.InvokeAsync("GetAllErrorMsg", New Object(-1) {}, Me.GetAllErrorMsgOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllErrorMsgOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllErrorMsgCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllErrorMsgCompleted(Me, New GetAllErrorMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/SearchError", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchError(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("SearchError", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchErrorAsync(ByVal param As String)
            Me.SearchErrorAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchErrorAsync(ByVal param As String, ByVal userState As Object)
            If (Me.SearchErrorOperationCompleted Is Nothing) Then
                Me.SearchErrorOperationCompleted = AddressOf Me.OnSearchErrorOperationCompleted
            End If
            Me.InvokeAsync("SearchError", New Object() {param}, Me.SearchErrorOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchErrorOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchErrorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchErrorCompleted(Me, New SearchErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/SearchErrorMsg", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchErrorMsg(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("SearchErrorMsg", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchErrorMsgAsync(ByVal param As String)
            Me.SearchErrorMsgAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchErrorMsgAsync(ByVal param As String, ByVal userState As Object)
            If (Me.SearchErrorMsgOperationCompleted Is Nothing) Then
                Me.SearchErrorMsgOperationCompleted = AddressOf Me.OnSearchErrorMsgOperationCompleted
            End If
            Me.InvokeAsync("SearchErrorMsg", New Object() {param}, Me.SearchErrorMsgOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchErrorMsgOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchErrorMsgCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchErrorMsgCompleted(Me, New SearchErrorMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/SetPrintedCardFlag", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetPrintedCardFlag(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("SetPrintedCardFlag", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPrintedCardFlagAsync(ByVal param As String)
            Me.SetPrintedCardFlagAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPrintedCardFlagAsync(ByVal param As String, ByVal userState As Object)
            If (Me.SetPrintedCardFlagOperationCompleted Is Nothing) Then
                Me.SetPrintedCardFlagOperationCompleted = AddressOf Me.OnSetPrintedCardFlagOperationCompleted
            End If
            Me.InvokeAsync("SetPrintedCardFlag", New Object() {param}, Me.SetPrintedCardFlagOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPrintedCardFlagOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPrintedCardFlagCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPrintedCardFlagCompleted(Me, New SetPrintedCardFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertLog", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertLog(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertLog", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertLogAsync(ByVal param As String)
            Me.InsertLogAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertLogAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertLogOperationCompleted Is Nothing) Then
                Me.InsertLogOperationCompleted = AddressOf Me.OnInsertLogOperationCompleted
            End If
            Me.InvokeAsync("InsertLog", New Object() {param}, Me.InsertLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertLogCompleted(Me, New InsertLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/UpdateFailedLogin", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFailedLogin(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("UpdateFailedLogin", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFailedLoginAsync(ByVal param As String)
            Me.UpdateFailedLoginAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFailedLoginAsync(ByVal param As String, ByVal userState As Object)
            If (Me.UpdateFailedLoginOperationCompleted Is Nothing) Then
                Me.UpdateFailedLoginOperationCompleted = AddressOf Me.OnUpdateFailedLoginOperationCompleted
            End If
            Me.InvokeAsync("UpdateFailedLogin", New Object() {param}, Me.UpdateFailedLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFailedLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFailedLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFailedLoginCompleted(Me, New UpdateFailedLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/SetIsLogedIn", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetIsLogedIn(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("SetIsLogedIn", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetIsLogedInAsync(ByVal param As String)
            Me.SetIsLogedInAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetIsLogedInAsync(ByVal param As String, ByVal userState As Object)
            If (Me.SetIsLogedInOperationCompleted Is Nothing) Then
                Me.SetIsLogedInOperationCompleted = AddressOf Me.OnSetIsLogedInOperationCompleted
            End If
            Me.InvokeAsync("SetIsLogedIn", New Object() {param}, Me.SetIsLogedInOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetIsLogedInOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetIsLogedInCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetIsLogedInCompleted(Me, New SetIsLogedInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetConsumableCards", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConsumableCards(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetConsumableCards", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConsumableCardsAsync(ByVal param As String)
            Me.GetConsumableCardsAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConsumableCardsAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetConsumableCardsOperationCompleted Is Nothing) Then
                Me.GetConsumableCardsOperationCompleted = AddressOf Me.OnGetConsumableCardsOperationCompleted
            End If
            Me.InvokeAsync("GetConsumableCards", New Object() {param}, Me.GetConsumableCardsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConsumableCardsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConsumableCardsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConsumableCardsCompleted(Me, New GetConsumableCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetCardTypes", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardTypes(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetCardTypes", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardTypesAsync(ByVal param As String)
            Me.GetCardTypesAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardTypesAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetCardTypesOperationCompleted Is Nothing) Then
                Me.GetCardTypesOperationCompleted = AddressOf Me.OnGetCardTypesOperationCompleted
            End If
            Me.InvokeAsync("GetCardTypes", New Object() {param}, Me.GetCardTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardTypesCompleted(Me, New GetCardTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/CheckExistBlueCard", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckExistBlueCard(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("CheckExistBlueCard", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckExistBlueCardAsync(ByVal param As String)
            Me.CheckExistBlueCardAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckExistBlueCardAsync(ByVal param As String, ByVal userState As Object)
            If (Me.CheckExistBlueCardOperationCompleted Is Nothing) Then
                Me.CheckExistBlueCardOperationCompleted = AddressOf Me.OnCheckExistBlueCardOperationCompleted
            End If
            Me.InvokeAsync("CheckExistBlueCard", New Object() {param}, Me.CheckExistBlueCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckExistBlueCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckExistBlueCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckExistBlueCardCompleted(Me, New CheckExistBlueCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/CheckOldCardNo", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckOldCardNo(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("CheckOldCardNo", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckOldCardNoAsync(ByVal param As String)
            Me.CheckOldCardNoAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckOldCardNoAsync(ByVal param As String, ByVal userState As Object)
            If (Me.CheckOldCardNoOperationCompleted Is Nothing) Then
                Me.CheckOldCardNoOperationCompleted = AddressOf Me.OnCheckOldCardNoOperationCompleted
            End If
            Me.InvokeAsync("CheckOldCardNo", New Object() {param}, Me.CheckOldCardNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckOldCardNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckOldCardNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckOldCardNoCompleted(Me, New CheckOldCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetExistCustomer", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExistCustomer(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetExistCustomer", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExistCustomerAsync(ByVal param As String)
            Me.GetExistCustomerAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExistCustomerAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetExistCustomerOperationCompleted Is Nothing) Then
                Me.GetExistCustomerOperationCompleted = AddressOf Me.OnGetExistCustomerOperationCompleted
            End If
            Me.InvokeAsync("GetExistCustomer", New Object() {param}, Me.GetExistCustomerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExistCustomerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExistCustomerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExistCustomerCompleted(Me, New GetExistCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetStackStatus", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStackStatus(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetStackStatus", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStackStatusAsync(ByVal param As String)
            Me.GetStackStatusAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStackStatusAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetStackStatusOperationCompleted Is Nothing) Then
                Me.GetStackStatusOperationCompleted = AddressOf Me.OnGetStackStatusOperationCompleted
            End If
            Me.InvokeAsync("GetStackStatus", New Object() {param}, Me.GetStackStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStackStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStackStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStackStatusCompleted(Me, New GetStackStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetStackStatusFromBranch", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStackStatusFromBranch(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetStackStatusFromBranch", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStackStatusFromBranchAsync(ByVal param As String)
            Me.GetStackStatusFromBranchAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStackStatusFromBranchAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetStackStatusFromBranchOperationCompleted Is Nothing) Then
                Me.GetStackStatusFromBranchOperationCompleted = AddressOf Me.OnGetStackStatusFromBranchOperationCompleted
            End If
            Me.InvokeAsync("GetStackStatusFromBranch", New Object() {param}, Me.GetStackStatusFromBranchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStackStatusFromBranchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStackStatusFromBranchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStackStatusFromBranchCompleted(Me, New GetStackStatusFromBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetConsumables", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConsumables(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetConsumables", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConsumablesAsync(ByVal param As String)
            Me.GetConsumablesAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConsumablesAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetConsumablesOperationCompleted Is Nothing) Then
                Me.GetConsumablesOperationCompleted = AddressOf Me.OnGetConsumablesOperationCompleted
            End If
            Me.InvokeAsync("GetConsumables", New Object() {param}, Me.GetConsumablesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConsumablesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConsumablesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConsumablesCompleted(Me, New GetConsumablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetPrintTempalte", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPrintTempalte(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetPrintTempalte", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPrintTempalteAsync(ByVal param As String)
            Me.GetPrintTempalteAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPrintTempalteAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetPrintTempalteOperationCompleted Is Nothing) Then
                Me.GetPrintTempalteOperationCompleted = AddressOf Me.OnGetPrintTempalteOperationCompleted
            End If
            Me.InvokeAsync("GetPrintTempalte", New Object() {param}, Me.GetPrintTempalteOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPrintTempalteOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPrintTempalteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPrintTempalteCompleted(Me, New GetPrintTempalteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetCardRemain", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCardRemain(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetCardRemain", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCardRemainAsync(ByVal param As String)
            Me.GetCardRemainAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCardRemainAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetCardRemainOperationCompleted Is Nothing) Then
                Me.GetCardRemainOperationCompleted = AddressOf Me.OnGetCardRemainOperationCompleted
            End If
            Me.InvokeAsync("GetCardRemain", New Object() {param}, Me.GetCardRemainOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCardRemainOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCardRemainCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCardRemainCompleted(Me, New GetCardRemainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetBranchStatckStatus", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchStatckStatus(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetBranchStatckStatus", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchStatckStatusAsync(ByVal param As String)
            Me.GetBranchStatckStatusAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchStatckStatusAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetBranchStatckStatusOperationCompleted Is Nothing) Then
                Me.GetBranchStatckStatusOperationCompleted = AddressOf Me.OnGetBranchStatckStatusOperationCompleted
            End If
            Me.InvokeAsync("GetBranchStatckStatus", New Object() {param}, Me.GetBranchStatckStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchStatckStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchStatckStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchStatckStatusCompleted(Me, New GetBranchStatckStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/UpdateCardPrintTemplate", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCardPrintTemplate(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("UpdateCardPrintTemplate", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCardPrintTemplateAsync(ByVal param As String)
            Me.UpdateCardPrintTemplateAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCardPrintTemplateAsync(ByVal param As String, ByVal userState As Object)
            If (Me.UpdateCardPrintTemplateOperationCompleted Is Nothing) Then
                Me.UpdateCardPrintTemplateOperationCompleted = AddressOf Me.OnUpdateCardPrintTemplateOperationCompleted
            End If
            Me.InvokeAsync("UpdateCardPrintTemplate", New Object() {param}, Me.UpdateCardPrintTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCardPrintTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCardPrintTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCardPrintTemplateCompleted(Me, New UpdateCardPrintTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertCustomerData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCustomerData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertCustomerData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCustomerDataAsync(ByVal param As String)
            Me.InsertCustomerDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCustomerDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertCustomerDataOperationCompleted Is Nothing) Then
                Me.InsertCustomerDataOperationCompleted = AddressOf Me.OnInsertCustomerDataOperationCompleted
            End If
            Me.InvokeAsync("InsertCustomerData", New Object() {param}, Me.InsertCustomerDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCustomerDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCustomerDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCustomerDataCompleted(Me, New InsertCustomerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertCardPrintTemplate", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCardPrintTemplate(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertCardPrintTemplate", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCardPrintTemplateAsync(ByVal param As String)
            Me.InsertCardPrintTemplateAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCardPrintTemplateAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertCardPrintTemplateOperationCompleted Is Nothing) Then
                Me.InsertCardPrintTemplateOperationCompleted = AddressOf Me.OnInsertCardPrintTemplateOperationCompleted
            End If
            Me.InvokeAsync("InsertCardPrintTemplate", New Object() {param}, Me.InsertCardPrintTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCardPrintTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCardPrintTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCardPrintTemplateCompleted(Me, New InsertCardPrintTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetReportDataGiftCard", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportDataGiftCard(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetReportDataGiftCard", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportDataGiftCardAsync(ByVal param As String)
            Me.GetReportDataGiftCardAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportDataGiftCardAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetReportDataGiftCardOperationCompleted Is Nothing) Then
                Me.GetReportDataGiftCardOperationCompleted = AddressOf Me.OnGetReportDataGiftCardOperationCompleted
            End If
            Me.InvokeAsync("GetReportDataGiftCard", New Object() {param}, Me.GetReportDataGiftCardOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportDataGiftCardOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportDataGiftCardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportDataGiftCardCompleted(Me, New GetReportDataGiftCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetReportData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetReportData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportDataAsync(ByVal param As String)
            Me.GetReportDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetReportDataOperationCompleted Is Nothing) Then
                Me.GetReportDataOperationCompleted = AddressOf Me.OnGetReportDataOperationCompleted
            End If
            Me.InvokeAsync("GetReportData", New Object() {param}, Me.GetReportDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportDataCompleted(Me, New GetReportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetUserNameFrWinUser", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserNameFrWinUser(ByVal UserName As String) As String
            Dim results() As Object = Me.Invoke("GetUserNameFrWinUser", New Object() {UserName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserNameFrWinUserAsync(ByVal UserName As String)
            Me.GetUserNameFrWinUserAsync(UserName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserNameFrWinUserAsync(ByVal UserName As String, ByVal userState As Object)
            If (Me.GetUserNameFrWinUserOperationCompleted Is Nothing) Then
                Me.GetUserNameFrWinUserOperationCompleted = AddressOf Me.OnGetUserNameFrWinUserOperationCompleted
            End If
            Me.InvokeAsync("GetUserNameFrWinUser", New Object() {UserName}, Me.GetUserNameFrWinUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserNameFrWinUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserNameFrWinUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserNameFrWinUserCompleted(Me, New GetUserNameFrWinUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetImportedDataStatus", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImportedDataStatus(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetImportedDataStatus", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImportedDataStatusAsync(ByVal param As String)
            Me.GetImportedDataStatusAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImportedDataStatusAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetImportedDataStatusOperationCompleted Is Nothing) Then
                Me.GetImportedDataStatusOperationCompleted = AddressOf Me.OnGetImportedDataStatusOperationCompleted
            End If
            Me.InvokeAsync("GetImportedDataStatus", New Object() {param}, Me.GetImportedDataStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImportedDataStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImportedDataStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImportedDataStatusCompleted(Me, New GetImportedDataStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetRemainCardData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRemainCardData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetRemainCardData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRemainCardDataAsync(ByVal param As String)
            Me.GetRemainCardDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRemainCardDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetRemainCardDataOperationCompleted Is Nothing) Then
                Me.GetRemainCardDataOperationCompleted = AddressOf Me.OnGetRemainCardDataOperationCompleted
            End If
            Me.InvokeAsync("GetRemainCardData", New Object() {param}, Me.GetRemainCardDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRemainCardDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRemainCardDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRemainCardDataCompleted(Me, New GetRemainCardDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetReportDataCounts", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportDataCounts(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetReportDataCounts", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportDataCountsAsync(ByVal param As String)
            Me.GetReportDataCountsAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportDataCountsAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetReportDataCountsOperationCompleted Is Nothing) Then
                Me.GetReportDataCountsOperationCompleted = AddressOf Me.OnGetReportDataCountsOperationCompleted
            End If
            Me.InvokeAsync("GetReportDataCounts", New Object() {param}, Me.GetReportDataCountsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportDataCountsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportDataCountsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportDataCountsCompleted(Me, New GetReportDataCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetReportDataCountsBranch", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportDataCountsBranch(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetReportDataCountsBranch", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportDataCountsBranchAsync(ByVal param As String)
            Me.GetReportDataCountsBranchAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportDataCountsBranchAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetReportDataCountsBranchOperationCompleted Is Nothing) Then
                Me.GetReportDataCountsBranchOperationCompleted = AddressOf Me.OnGetReportDataCountsBranchOperationCompleted
            End If
            Me.InvokeAsync("GetReportDataCountsBranch", New Object() {param}, Me.GetReportDataCountsBranchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportDataCountsBranchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportDataCountsBranchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportDataCountsBranchCompleted(Me, New GetReportDataCountsBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetgetUnusableCards", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetgetUnusableCards(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetgetUnusableCards", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetgetUnusableCardsAsync(ByVal param As String)
            Me.GetgetUnusableCardsAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetgetUnusableCardsAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetgetUnusableCardsOperationCompleted Is Nothing) Then
                Me.GetgetUnusableCardsOperationCompleted = AddressOf Me.OnGetgetUnusableCardsOperationCompleted
            End If
            Me.InvokeAsync("GetgetUnusableCards", New Object() {param}, Me.GetgetUnusableCardsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetgetUnusableCardsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetgetUnusableCardsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetgetUnusableCardsCompleted(Me, New GetgetUnusableCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetAdminMessages", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdminMessages(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetAdminMessages", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdminMessagesAsync(ByVal param As String)
            Me.GetAdminMessagesAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdminMessagesAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetAdminMessagesOperationCompleted Is Nothing) Then
                Me.GetAdminMessagesOperationCompleted = AddressOf Me.OnGetAdminMessagesOperationCompleted
            End If
            Me.InvokeAsync("GetAdminMessages", New Object() {param}, Me.GetAdminMessagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdminMessagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdminMessagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdminMessagesCompleted(Me, New GetAdminMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetLogData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLogData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetLogData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLogDataAsync(ByVal param As String)
            Me.GetLogDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLogDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetLogDataOperationCompleted Is Nothing) Then
                Me.GetLogDataOperationCompleted = AddressOf Me.OnGetLogDataOperationCompleted
            End If
            Me.InvokeAsync("GetLogData", New Object() {param}, Me.GetLogDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLogDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLogDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLogDataCompleted(Me, New GetLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetBranchRepositoryData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchRepositoryData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetBranchRepositoryData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchRepositoryDataAsync(ByVal param As String)
            Me.GetBranchRepositoryDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchRepositoryDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetBranchRepositoryDataOperationCompleted Is Nothing) Then
                Me.GetBranchRepositoryDataOperationCompleted = AddressOf Me.OnGetBranchRepositoryDataOperationCompleted
            End If
            Me.InvokeAsync("GetBranchRepositoryData", New Object() {param}, Me.GetBranchRepositoryDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchRepositoryDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchRepositoryDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchRepositoryDataCompleted(Me, New GetBranchRepositoryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetBranchRepositoryStatusByDate", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchRepositoryStatusByDate(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetBranchRepositoryStatusByDate", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchRepositoryStatusByDateAsync(ByVal param As String)
            Me.GetBranchRepositoryStatusByDateAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchRepositoryStatusByDateAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetBranchRepositoryStatusByDateOperationCompleted Is Nothing) Then
                Me.GetBranchRepositoryStatusByDateOperationCompleted = AddressOf Me.OnGetBranchRepositoryStatusByDateOperationCompleted
            End If
            Me.InvokeAsync("GetBranchRepositoryStatusByDate", New Object() {param}, Me.GetBranchRepositoryStatusByDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchRepositoryStatusByDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchRepositoryStatusByDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchRepositoryStatusByDateCompleted(Me, New GetBranchRepositoryStatusByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetBranchRepositoryConflictData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchRepositoryConflictData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetBranchRepositoryConflictData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchRepositoryConflictDataAsync(ByVal param As String)
            Me.GetBranchRepositoryConflictDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchRepositoryConflictDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetBranchRepositoryConflictDataOperationCompleted Is Nothing) Then
                Me.GetBranchRepositoryConflictDataOperationCompleted = AddressOf Me.OnGetBranchRepositoryConflictDataOperationCompleted
            End If
            Me.InvokeAsync("GetBranchRepositoryConflictData", New Object() {param}, Me.GetBranchRepositoryConflictDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchRepositoryConflictDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchRepositoryConflictDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchRepositoryConflictDataCompleted(Me, New GetBranchRepositoryConflictDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/GetLastPrintedCardData", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLastPrintedCardData(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("GetLastPrintedCardData", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLastPrintedCardDataAsync(ByVal param As String)
            Me.GetLastPrintedCardDataAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLastPrintedCardDataAsync(ByVal param As String, ByVal userState As Object)
            If (Me.GetLastPrintedCardDataOperationCompleted Is Nothing) Then
                Me.GetLastPrintedCardDataOperationCompleted = AddressOf Me.OnGetLastPrintedCardDataOperationCompleted
            End If
            Me.InvokeAsync("GetLastPrintedCardData", New Object() {param}, Me.GetLastPrintedCardDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLastPrintedCardDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLastPrintedCardDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLastPrintedCardDataCompleted(Me, New GetLastPrintedCardDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertConsumableRequest", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertConsumableRequest(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertConsumableRequest", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertConsumableRequestAsync(ByVal param As String)
            Me.InsertConsumableRequestAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertConsumableRequestAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertConsumableRequestOperationCompleted Is Nothing) Then
                Me.InsertConsumableRequestOperationCompleted = AddressOf Me.OnInsertConsumableRequestOperationCompleted
            End If
            Me.InvokeAsync("InsertConsumableRequest", New Object() {param}, Me.InsertConsumableRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertConsumableRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertConsumableRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertConsumableRequestCompleted(Me, New InsertConsumableRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://evolis.me/InsertAdminMessage", RequestNamespace:="http://evolis.me/", ResponseNamespace:="http://evolis.me/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertAdminMessage(ByVal param As String) As String
            Dim results() As Object = Me.Invoke("InsertAdminMessage", New Object() {param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertAdminMessageAsync(ByVal param As String)
            Me.InsertAdminMessageAsync(param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertAdminMessageAsync(ByVal param As String, ByVal userState As Object)
            If (Me.InsertAdminMessageOperationCompleted Is Nothing) Then
                Me.InsertAdminMessageOperationCompleted = AddressOf Me.OnInsertAdminMessageOperationCompleted
            End If
            Me.InvokeAsync("InsertAdminMessage", New Object() {param}, Me.InsertAdminMessageOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertAdminMessageOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertAdminMessageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertAdminMessageCompleted(Me, New InsertAdminMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetRepositoryRequestsSelectedCompletedEventHandler(ByVal sender As Object, ByVal e As GetRepositoryRequestsSelectedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRepositoryRequestsSelectedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetRepositoryRequestsCompletedEventHandler(ByVal sender As Object, ByVal e As GetRepositoryRequestsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRepositoryRequestsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub UpdateRepositoryAcceptingCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRepositoryAcceptingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRepositoryAcceptingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub UpdateRepositoryReceivingCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRepositoryReceivingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRepositoryReceivingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub DeleteReposotoryRequestCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteReposotoryRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteReposotoryRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub DeleteAdminMessageCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteAdminMessageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteAdminMessageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub ChangeAdminMessageStatusCompletedEventHandler(ByVal sender As Object, ByVal e As ChangeAdminMessageStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangeAdminMessageStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertUnusableCardCompletedEventHandler(ByVal sender As Object, ByVal e As InsertUnusableCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertUnusableCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub FindPosCompletedEventHandler(ByVal sender As Object, ByVal e As FindPosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindPosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub FindUsersCompletedEventHandler(ByVal sender As Object, ByVal e As FindUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub FindBranchUsersCompletedEventHandler(ByVal sender As Object, ByVal e As FindBranchUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindBranchUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetCustomerInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetCustomerInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCustomerInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertCardData22CompletedEventHandler(ByVal sender As Object, ByVal e As InsertCardData22CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCardData22CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertCardDataCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCardDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCardDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub CheckUserCompletedEventHandler(ByVal sender As Object, ByVal e As CheckUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub ValidateActiveDirectoryLoginWebCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateActiveDirectoryLoginWebCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateActiveDirectoryLoginWebCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub UserChangePasswordCompletedEventHandler(ByVal sender As Object, ByVal e As UserChangePasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserChangePasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub ResetPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ResetPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ResetPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub DeleteUserCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub UpdatePosCompletedEventHandler(ByVal sender As Object, ByVal e As UpdatePosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdatePosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub UpdateUserCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertPosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertPosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertPosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertUserCompletedEventHandler(ByVal sender As Object, ByVal e As InsertUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub SearchPosCompletedEventHandler(ByVal sender As Object, ByVal e As SearchPosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchPosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub SearchUserCompletedEventHandler(ByVal sender As Object, ByVal e As SearchUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub ShebaGeneratorCompletedEventHandler(ByVal sender As Object, ByVal e As ShebaGeneratorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ShebaGeneratorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetCounterCompletedEventHandler(ByVal sender As Object, ByVal e As GetCounterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCounterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetCardDataGiftCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardDataGiftCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardDataGiftCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetCardDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetStatusLastCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetStatusLastCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStatusLastCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetPosDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetPosDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPosDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetCardDataIranCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardDataIranCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardDataIranCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetReCardDataIranCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetReCardDataIranCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReCardDataIranCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetAllErrorMsgCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllErrorMsgCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllErrorMsgCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub SearchErrorCompletedEventHandler(ByVal sender As Object, ByVal e As SearchErrorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchErrorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub SearchErrorMsgCompletedEventHandler(ByVal sender As Object, ByVal e As SearchErrorMsgCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchErrorMsgCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub SetPrintedCardFlagCompletedEventHandler(ByVal sender As Object, ByVal e As SetPrintedCardFlagCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPrintedCardFlagCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertLogCompletedEventHandler(ByVal sender As Object, ByVal e As InsertLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub UpdateFailedLoginCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFailedLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFailedLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub SetIsLogedInCompletedEventHandler(ByVal sender As Object, ByVal e As SetIsLogedInCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetIsLogedInCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetConsumableCardsCompletedEventHandler(ByVal sender As Object, ByVal e As GetConsumableCardsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConsumableCardsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetCardTypesCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub CheckExistBlueCardCompletedEventHandler(ByVal sender As Object, ByVal e As CheckExistBlueCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckExistBlueCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub CheckOldCardNoCompletedEventHandler(ByVal sender As Object, ByVal e As CheckOldCardNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckOldCardNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetExistCustomerCompletedEventHandler(ByVal sender As Object, ByVal e As GetExistCustomerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExistCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetStackStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetStackStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStackStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetStackStatusFromBranchCompletedEventHandler(ByVal sender As Object, ByVal e As GetStackStatusFromBranchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStackStatusFromBranchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetConsumablesCompletedEventHandler(ByVal sender As Object, ByVal e As GetConsumablesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConsumablesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetPrintTempalteCompletedEventHandler(ByVal sender As Object, ByVal e As GetPrintTempalteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPrintTempalteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetCardRemainCompletedEventHandler(ByVal sender As Object, ByVal e As GetCardRemainCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCardRemainCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetBranchStatckStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchStatckStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchStatckStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub UpdateCardPrintTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCardPrintTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCardPrintTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertCustomerDataCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCustomerDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCustomerDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertCardPrintTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCardPrintTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCardPrintTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetReportDataGiftCardCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportDataGiftCardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportDataGiftCardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetReportDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetUserNameFrWinUserCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserNameFrWinUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserNameFrWinUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetImportedDataStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetImportedDataStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImportedDataStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetRemainCardDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetRemainCardDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRemainCardDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetReportDataCountsCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportDataCountsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportDataCountsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetReportDataCountsBranchCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportDataCountsBranchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportDataCountsBranchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetgetUnusableCardsCompletedEventHandler(ByVal sender As Object, ByVal e As GetgetUnusableCardsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetgetUnusableCardsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetAdminMessagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdminMessagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdminMessagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetLogDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetLogDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLogDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetBranchRepositoryDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchRepositoryDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchRepositoryDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetBranchRepositoryStatusByDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchRepositoryStatusByDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchRepositoryStatusByDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetBranchRepositoryConflictDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchRepositoryConflictDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchRepositoryConflictDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetLastPrintedCardDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetLastPrintedCardDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLastPrintedCardDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertConsumableRequestCompletedEventHandler(ByVal sender As Object, ByVal e As InsertConsumableRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertConsumableRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub InsertAdminMessageCompletedEventHandler(ByVal sender As Object, ByVal e As InsertAdminMessageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertAdminMessageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
